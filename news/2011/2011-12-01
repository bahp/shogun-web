<new>
	<updated_date>2011-12-01</updated_date> 
	<author>Soeren Sonnenburg</author>
	<mail>sonne@debian.org</mail>

	<sg_ver>1.1.0</sg_ver>
	<sg_bver>1.1.0</sg_bver>
	<libshogun_ver>11.0</libshogun_ver>
	<data_ver>0.3</data_ver>
	<param_ver>0</param_ver>
	<libshogunui></libshogunui>

	<content>
		* This release contains several enhancements, cleanups and bugfixes:
		* Features:
		   - New dimensionality reduction algorithms:
		     Diffusion Maps, Kernel Locally Linear Embedding,
		     Kernel Local Tangent Space Alignment, Linear Local Tangent Space Alignment,
		     Neighborhood Preserving embedding, Locality Preserving Projections.
		   - Various performance improvements for dimensionality reduction methods (BLAS,
		     alignment formulation of the LLE, ..)
		   - Automatical k determination mode for Locally Linear Embedding dimension
		     reduction method based on reconstruction error.
		   - ARPACK and SUPERLU integration.
		   - Introduce the concept of Converters that can embed (arbitrary) feature
		     types into different feature types.
		   - LibSVM is now pthread-parallelized.
		   - Create modshogun.dll for csharp.
		   - Various new c# examples (thanks Daniel Korn and Ori Cohen).
		   - Dimensionality reduction examples application is introduced
		* Bugfixes:
		   - Octave_static and octave_modular examples fix.
		   - Memory leak in custom kernel is now eliminated (thanks Madeleine Seeland for reporting).
		   - Fix for linear machine set_w method (thanks Brian Cheung for reporting).
		   - DotFeatures fix for assert bug.
		   - FibonacciHeap memory leak fix.
		   - Fix for Java modular interface typemapping bug.
		   - Fix errors uncovered by LLVM / clang++.
		   - Fix for configure on Darwin-x86_64 (thanks Peter Romov for patch).
		   - Improve lua / ruby detection.
		   - Fix configure / compilation under osx and cygwin for variuos interfaces.
		* Cleanup and API Changes:
		   - Most of the inline functions have been (re)moved to the corresponding
		     .cpp file
		   - Libshogun is now being compiled with sse support for math (if available) but
		     interfaces are now being compiled with -O0 key which drastically reduces compilation time
	</content>
</new>